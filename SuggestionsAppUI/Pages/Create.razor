@page "/Create"
@attribute [Authorize]
@using SuggestionsAppUI.Models
@using SuggestionsAppUI.Components

@inject AuthenticationStateProvider authProvider
@inject ISuggestionData SuggestionData
@inject ICategoryData CategoryData
@inject IUserData UserData

@inject NavigationManager navManager

<h3>Make A Suggestion</h3>
<div>
    <button @onclick="ClosePage">
    </button>
</div>

@if (categories is not null)
{
   
    <div>
        <div>
            <div>
                <EditForm Model="suggestion" OnInvalidSubmit="CreateSuggestion">
                    <DataAnnotationsValidator />
                    <ValidationSummary/>
                    <div>
                        <label for="suggestion-text">Suggestion</label>
                        <div>Focus on the topic or technology you want to learn</div>
                        <InputText id="suggestion-text" @bind-Value="suggestion.Suggestion" />
                    </div>
                    <div>
                        <label for="category">Category</label>
                        <div>Choose one category</div>
                        <div>
                            <MyInputRadioGroup id="category"  @bind-Value="suggestion.CategoryId">
                                @foreach(var c in categories)
                                {
                                    <div>
                                        <InputRadio Value="@c.Id" id="@c.Id"/>
                                        <label for="@c.Id">@c.CategoryName - @c.CategoryDescription</label>
                                    </div>
                                }
                            </MyInputRadioGroup>
                        </div>
                    </div>
                    <div>
                        <label for="description">Description</label>
                        <div>Briefly describe your suggestion.</div>
                        <InputTextArea id="description" @bind-Value="suggestion.Description" />
                    </div>
                    <div>
                        <button type="submit">Suggest</button>
                    </div>
                </EditForm>
              
            </div>
        </div>
    </div>
}

@code {
    private CreateSuggestionModel suggestion = new();
    private List<CategoryModel> categories;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        categories = await CategoryData.GetAllCategories();
        loggedInUser = await authProvider.GetUserFromAuth(UserData);
    }

    protected async Task CreateSuggestion()
    {
        
        SuggestionModel s = new SuggestionModel();
        s.Suggestion = suggestion.Suggestion;
        s.Category = categories.Where(c => c.Id == suggestion.CategoryId).FirstOrDefault(); ;
        s.Description = suggestion.Description;
        s.Suggestion = suggestion.Suggestion;
        s.Author = new BasicUserModel(loggedInUser);

        if (s.Category == null)
        {
            suggestion.CategoryId = "";
            return;
        }

        await SuggestionData.CreateSuggestion(s);
        suggestion = new();
        ClosePage();
    }

    protected void ClosePage()
    {
        navManager.NavigateTo("/");
    }
}
