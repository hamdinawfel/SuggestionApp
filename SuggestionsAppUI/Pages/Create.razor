@page "/Create"
@attribute [Authorize]
@using SuggestionsAppUI.Models
@using SuggestionsAppUI.Components

@inject AuthenticationStateProvider authProvider
@inject ISuggestionData SuggestionData
@inject ICategoryData CategoryData
@inject IUserData UserData

@inject NavigationManager navManager

<h1 class="page-heading text-uppercase mb-4">Make A Suggestion</h1>


<div class="row justify-content-center create-form">
    <div class="col-lg-10 col-xl-8 form-layout">
        <div class="close-button-container">
            <button class="btn btn-close" @onclick="ClosePage" />
        </div>
        <div>
            @if (categories is not null)
            {
                <EditForm Model="suggestion" OnInvalidSubmit="CreateSuggestion">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="input-container">
                        <label class="form-label fw-bold text-uppercase" for="suggestion-text">Suggestion</label>
                        <div class="input-description">Focus on the topic or technology you want to learn</div>
                        <InputText class="form-control" id="suggestion-text" @bind-Value="suggestion.Suggestion" />
                    </div>
                    <div class="input-container">
                        <label class="form-label fw-bold text-uppercase" for="category">Category</label>
                        <div class="input-description">Choose one category</div>
                        <div>
                            <MyInputRadioGroup class="col-lg-8" id="category" @bind-Value="suggestion.CategoryId">
                                @foreach (var c in categories)
                                {
                                    <div class="radio-item-group">
                                        <InputRadio Value="@c.Id" id="@c.Id" />
                                        <label for="@c.Id">@c.CategoryName - @c.CategoryDescription</label>
                                    </div>
                                }
                            </MyInputRadioGroup>
                        </div>
                    </div>
                    <div class="input-container">
                        <label class="form-label fw-bold text-uppercase" for="description">Description</label>
                        <div class="input-description">Briefly describe your suggestion.</div>
                        <InputTextArea class="form-control" id="description" @bind-Value="suggestion.Description" />
                    </div>
                    <div class="center-children">
                        <button class="btn btn-main btn-lg text-uppercase" @onclick="CreateSuggestion" type="submit">Suggest</button>
                    </div>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    private CreateSuggestionModel suggestion = new();
    private List<CategoryModel> categories;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        categories = await CategoryData.GetAllCategories();
        loggedInUser = await authProvider.GetUserFromAuth(UserData);
    }

    protected async Task CreateSuggestion()
    {
        
        SuggestionModel s = new SuggestionModel();
        s.Suggestion = suggestion.Suggestion;
        s.Category = categories.Where(c => c.Id == suggestion.CategoryId).FirstOrDefault(); ;
        s.Description = suggestion.Description;
        s.Suggestion = suggestion.Suggestion;
        s.Author = new BasicUserModel(loggedInUser);

        if (s.Category == null)
        {
            suggestion.CategoryId = "";
            return;
        }

        await SuggestionData.CreateSuggestion(s);
        suggestion = new();
        ClosePage();
    }

    protected void ClosePage()
    {
        navManager.NavigateTo("/");
    }
}
